# This Helm test is conditionally rendered based on the '.Values.services.nsfwDetector.enabled' value.
# If the nsfwDetector service is enabled in the values file, this test Pod will be created.
{{- if (index .Values.services "nsfwDetector").enabled }}
# This manifest defines a Kubernetes Pod that serves as a Helm test.
# Its purpose is to verify that the 'nsfwDetector' service is reachable from within the Kubernetes cluster.
# It attempts to connect to the service's health check endpoint (or a default '/healthcheck' path).
apiVersion: v1
kind: Pod
metadata:
  # The name of the test Pod. It includes the full release name and service identifier for uniqueness.
  name: "{{ include "vrooli.fullname" . }}-nsfwdetector-test-connection"
  labels:
    # Standard labels for identifying the application and release.
    app.kubernetes.io/name: "{{ include "vrooli.name" . }}-test"
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    helm.sh/chart: "{{ include "vrooli.chart" . }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    # Custom label to identify this as an nsfwDetector test component.
    app.kubernetes.io/component: nsfwdetector-test
  annotations:
    # This annotation designates the Pod as a Helm test hook.
    # Helm will execute this Pod when 'helm test <release-name>' is run.
    "helm.sh/hook": test
    # Defines the deletion policy for the test Pod.
    # 'before-hook-creation': Any existing Pod from a previous test run with the same name will be deleted before this one is created.
    # 'hook-succeeded': The Pod will be deleted automatically if the test passes.
    # If the test fails, the Pod will be kept for inspection.
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  containers:
    # This section defines the container(s) that will run inside the Pod.
    - name: wget
      # Uses a minimal 'busybox' image, which contains common Unix utilities like 'wget'.
      image: busybox
      # The command to be executed in the container is 'wget'.
      command: ['wget']
      # Arguments passed to the 'wget' command.
      # The primary goal is to attempt an HTTP GET request to the nsfwDetector service's health endpoint.
      # If the nsfwDetector service is purely TCP and doesn't have an HTTP endpoint, or if the health path is different,
      # this test might require adjustment (e.g., using 'nc' for a TCP port check).
      args: [
        '-qO-',  # '-q' (quiet): Suppresses wget's normal output.
                  # '-O-' (output document to stdout): Sends the downloaded content to standard output.
        '-T',    # '-T' (timeout): Sets the network timeout.
        '10',    # Timeout value in seconds (10 seconds). The test will fail if the connection or read times out.
        # The URL to which wget will attempt to connect. This is constructed dynamically:
        # 1. Service name: '{{ include "vrooli.fullname" . }}-nsfwDetector' (e.g., 'myrelease-vrooli-nsfwDetector')
        # 2. Service port: '{{ (index .Values.services "nsfwDetector").port }}' (e.g., '8080')
        # 3. Health check path: '{{ (index .Values.services "nsfwDetector").probes.readinessPath | default "/healthcheck" }}'
        #    This uses the 'readinessPath' defined in the values for the nsfwDetector service.
        #    If 'readinessPath' is not defined, it defaults to '/healthcheck'.
        # The resulting URL will look like: 'http://myrelease-vrooli-nsfwDetector:8080/healthcheck'
        '{{ include "vrooli.fullname" . }}-nsfwDetector:{{ (index .Values.services "nsfwDetector").port }}{{ (index .Values.services "nsfwDetector").probes.readinessPath | default "/healthcheck" }}'
      ]
  # Defines the restart policy for all containers in the Pod.
  # 'Never': If the container fails (e.g., wget cannot connect and exits with an error) or completes successfully,
  # Kubernetes will not attempt to restart it. This is standard for test Pods.
  restartPolicy: Never
{{- end }} # End of the conditional block for nsfwDetector service enabled. 